#!/bin/bash
# allow for looping
while :
do
# print menu display
echo "
======================= MENU =======================
Please make an selection from the following options:
(a) all below, in the following sequence.
(b) missing file(s).
(c) the right name*, but wrong size and contents.
(d) the right name* and size, but wrong contents.
(e) the wrong name*, but right size and contents.
====================================================
"
# start menu
read selection
case $selection in
    "a")echo -e "\n"
        echo "You selected: (a) all below, in the following sequence."
        echo -e "\n"
        echo "=============== Missing file(s) ===================="
        echo -e "\n"
        diff -qr dribble riveting
        echo -e "\n"
        # this section is not working
        echo "===== Right name*, but wrong size and contents ====="
        echo -e "\n"
        for file1 in `find dribble -type f | cut -b 9-`
        do
            for file2 in `find riveting -type f | cut -b 10-`
            do
                if test "$file1" == "$file2"
                then
                    file_size1=`ls -s dribble/$file1 | awk '{print $1}'`
                    file_size2=`ls -s riveting/$file2 | awk '{print $1}'`
                    [ "$file_size1" != "$file_size2" ] && echo "$file1"
                fi
            done
        done 
        echo -e "\n"
        echo "===== Right name* and size, but wrong contents ====="
        echo -e "\n"
        for file1 in `find dribble -type f | cut -b 9-`
        do
            for file2 in `find riveting -type f | cut -b 10-`
            do
                if test "$file1" == "$file2"
                then
                    file_size1=`ls -s dribble/$file1 | awk '{print $1}'`
                    file_size2=`ls -s riveting/$file2 | awk '{print $1}'`
                    if test "$file_size1" == "$file_size2"
                    then
                        result=`cmp dribble/$file1 riveting/$file2`
                        [ ! -z "$result" ] && echo "$file1"
                    fi
                fi
            done
        done 
        echo -e "\n"
        echo "===== Wrong name*, but right size and contents ====="
        echo -e "\n"
        for file1 in `find dribble -type f | cut -b 9-`
        do
            for file2 in `find riveting -type f | cut -b 10-`
            do
                if test "$file1" != "$file2"
                then
                    file_size1=`ls -s dribble/$file1 | awk '{print $1}'`
                    file_size2=`ls -s riveting/$file2 | awk '{print $1}'`
                    if test "$file_size1" == "$file_size2"
                    then
                        result=`cmp dribble/$file1 riveting/$file2`
                        [ -z "$result" ] && echo "$file1" >>Output
                    fi
                fi
            done
        done
        cat Output | uniq
        ;;
    # end full operation
    # begin single operations
    "b")echo -e "\n"
        echo "You chose: (b) missing file"
        echo -e "\n"
        echo "=============== Missing file(s) ===================="
        echo -e "\n"
        diff -qr dribble riveting
        ;;
    # this section is not working
    "c")echo -e "\n"
        echo "(c) the right name*, but wrong size and contents."
        echo -e "\n"
        echo "===== Right name*, but wrong size and contents ====="
        echo -e "\n"
        for file1 in `find dribble -type f | cut -b 9-`
        do
            for file2 in `find riveting -type f | cut -b 10-`
            do
                if test "$file1" == "$file2"
                then
                    file_size1=`ls -s dribble/$file1 | awk '{print $1}'`
                    file_size2=`ls -s riveting/$file2 | awk '{print $1}'`
                    [ "$file_size1" != "$file_size2" ] && echo "$file1" >>Output
                fi
            done
        done 
        ;;
    "d")echo -e "\n"
        echo "You chose (d) the right name* and size, but wrong contents."
        echo -e "\n"
        echo "===== Right name* and size, but wrong contents ====="
        echo -e "\n"
        for file1 in `find dribble -type f | cut -b 9-`
        do
            for file2 in `find riveting -type f | cut -b 10-`
            do
                if test "$file1" == "$file2"
                then
                    file_size1=`ls -s dribble/$file1 | awk '{print $1}'`
                    file_size2=`ls -s riveting/$file2 | awk '{print $1}'`
                    if test "$file_size1" == "$file_size2"
                    then
                        result=`cmp dribble/$file1 riveting/$file2`
                        [ ! -z "$result" ] && echo "$file1" >>Output
                    fi
                fi
            done
        done 
        ;;
    "e")echo -e "\n"
        echo "You chose (e) the wrong name*, but right size and contents."
        echo -e "\n"
        echo "===== Wrong name*, but right size and contents ====="
        echo -e "\n"
        for file1 in `find dribble -type f | cut -b 9-`
        do
            for file2 in `find riveting -type f | cut -b 10-`
            do
                if test "$file1" != "$file2"
                then
                    file_size1=`ls -s dribble/$file1 | awk '{print $1}'`
                    file_size2=`ls -s riveting/$file2 | awk '{print $1}'`
                    if test "$file_size1" == "$file_size2"
                    then
                        result=`cmp dribble/$file1 riveting/$file2`
                        [ -z "$result" ] && echo "$file1" >>Output
                    fi
                fi
            done
        done
        # create new file for output
        cat Output | uniq
        ;;
    # check for all other input other than above and print error message
    *)  echo -e "\nIncorrect selection, please try again."
    ;;
# end script
esac
echo -e "\n===================================================="
# print message on exit solution
echo -e "\nTo quit please press CTRL+C\n"
done

# (d) 
# (e) does not take into account for letter case